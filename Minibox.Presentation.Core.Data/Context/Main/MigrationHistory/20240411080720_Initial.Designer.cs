// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minibox.Presentation.Core.Data.Context.Main;

#nullable disable

namespace Minibox.Presentation.Core.Data.Context.Main.MigrationHistory
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240411080720_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brand", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920001"),
                            Description = "",
                            Name = "No brand",
                            Origin = ""
                        });
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920001"),
                            Description = "Category.Skincare.Description",
                            Name = "Category.Skincare"
                        },
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920002"),
                            Description = "Category.Bodycare.Description",
                            Name = "Category.Bodycare"
                        },
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920003"),
                            Description = "Category.Teethcare.Description",
                            Name = "Category.Teethcare"
                        },
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920004"),
                            Description = "Category.Haircare.Description",
                            Name = "Category.Haircare"
                        },
                        new
                        {
                            Id = new Guid("1aa06459-843a-4958-9d21-13e900920005"),
                            Description = "Category.Makeup.Description",
                            Name = "Category.Makeup"
                        });
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Buffer")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("varbinary(8000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Image", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CoverImageId")
                        .IsUnique()
                        .HasFilter("[CoverImageId] IS NOT NULL");

                    b.HasIndex("CoverVideoId")
                        .IsUnique()
                        .HasFilter("[CoverVideoId] IS NOT NULL");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductClassification", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitWeight")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("ProductClassificationId");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("ProductClassificationDetail", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOtherImage", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductProperty", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Buffer")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("varbinary(8000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Video", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("Brand")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("Category")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "CoverImage")
                        .WithOne("Product")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "CoverImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", "CoverVideo")
                        .WithOne("Product")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "CoverVideoId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("CoverImage");

                    b.Navigation("CoverVideo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductClassification")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", "ImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductClassifications")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductClassificationDetail")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", "ImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", "ProductClassification")
                        .WithMany("ProductClassificationDetails")
                        .HasForeignKey("ProductClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("ProductClassification");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductOtherImage")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", "ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductOtherImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductProperty", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductProperties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", b =>
                {
                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Product");

                    b.Navigation("ProductClassification");

                    b.Navigation("ProductClassificationDetail");

                    b.Navigation("ProductOtherImage");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.Navigation("ProductClassifications");

                    b.Navigation("ProductOtherImages");

                    b.Navigation("ProductProperties");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.Navigation("ProductClassificationDetails");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
