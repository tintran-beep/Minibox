// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minibox.Presentation.Core.Data.Context.Main;

#nullable disable

namespace Minibox.Presentation.Core.Data.Context.Main.MigrationHistory
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240415064245_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressDetail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GeographicalCoordinates")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("Address", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixPhoneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("District", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Province", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Ward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Ward", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brand", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22da518d-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "No brand",
                            Origin = ""
                        },
                        new
                        {
                            Id = new Guid("22da518e-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Cosrx",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da518f-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Estée Lauder",
                            Origin = "USA"
                        },
                        new
                        {
                            Id = new Guid("22da5190-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Laneige",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da5191-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Foodaholic",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da5192-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "L''Oréal Paris",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da5193-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dear, Klairs",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da5194-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Ceiba Tree",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da5195-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Habaria",
                            Origin = "China"
                        },
                        new
                        {
                            Id = new Guid("22da5196-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Angel's Liquid",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da5197-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "BNBG",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da5198-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Simple",
                            Origin = "England"
                        },
                        new
                        {
                            Id = new Guid("22da5199-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Redwin",
                            Origin = "Australia"
                        },
                        new
                        {
                            Id = new Guid("22da519a-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Silky Hands",
                            Origin = "Russia"
                        },
                        new
                        {
                            Id = new Guid("22da519b-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Olay",
                            Origin = "USA"
                        },
                        new
                        {
                            Id = new Guid("22da519c-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Vaseline",
                            Origin = "England"
                        },
                        new
                        {
                            Id = new Guid("22da519d-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "MartiDerm La Formula",
                            Origin = "Spain"
                        },
                        new
                        {
                            Id = new Guid("22da519e-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Skin1004",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da519f-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Hatomugi",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51a0-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Silcot",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51a1-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "A BONNE",
                            Origin = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("22da51a2-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Evoluderm",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da51a3-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Bioderma",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da51a4-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Balance Active Fomular",
                            Origin = "England"
                        },
                        new
                        {
                            Id = new Guid("22da51a5-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "The Odinary",
                            Origin = "Canadian"
                        },
                        new
                        {
                            Id = new Guid("22da51a6-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Huxley",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51a7-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dr.G",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51a8-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dr.SkinCare",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51a9-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Ziaja",
                            Origin = "Poland"
                        },
                        new
                        {
                            Id = new Guid("22da51aa-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "9Wishes",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51ab-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "BYPHASSE",
                            Origin = "Spain"
                        },
                        new
                        {
                            Id = new Guid("22da51ac-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "ANESSA",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51ad-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Vichy",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da51ae-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "MEDIAN",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51af-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Hada Labo",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51b0-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Rosette",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51b1-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "MARVIS",
                            Origin = "Italian"
                        },
                        new
                        {
                            Id = new Guid("22da51b2-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Mediheal",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51b3-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Forencos",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51b4-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Timeless",
                            Origin = "USA"
                        },
                        new
                        {
                            Id = new Guid("22da51b5-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Embryolisse",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da51b6-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Cell Fusion C",
                            Origin = "Korean"
                        },
                        new
                        {
                            Id = new Guid("22da51b7-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "CeraVe",
                            Origin = "USA"
                        },
                        new
                        {
                            Id = new Guid("22da51b8-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Propolinse",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51b9-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Elasten",
                            Origin = "Germany"
                        },
                        new
                        {
                            Id = new Guid("22da51ba-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Scentio",
                            Origin = "Thailand"
                        },
                        new
                        {
                            Id = new Guid("22da51bb-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "White Conc",
                            Origin = "Japan"
                        },
                        new
                        {
                            Id = new Guid("22da51bc-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "La Roche-Posay",
                            Origin = "France"
                        },
                        new
                        {
                            Id = new Guid("22da51bd-faf0-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "DHC",
                            Origin = "Japan"
                        });
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Category", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdab81bb-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chưa phân loại"
                        },
                        new
                        {
                            Id = new Guid("cdab81bc-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Nước hoa"
                        },
                        new
                        {
                            Id = new Guid("cdab81bd-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Nước hoa nữ",
                            ParentId = new Guid("cdab81bc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81be-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Nước hoa nam",
                            ParentId = new Guid("cdab81bc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81bf-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Nước hoa vùng kín",
                            ParentId = new Guid("cdab81bc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c0-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Xịt thơm toàn thân",
                            ParentId = new Guid("cdab81bc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Trang điểm"
                        },
                        new
                        {
                            Id = new Guid("cdab81c2-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Trang điểm môi",
                            ParentId = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c3-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Trang điểm mặt",
                            ParentId = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c4-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Trang điểm mắt",
                            ParentId = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c5-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Trang điểm móng",
                            ParentId = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c6-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Bộ dụng cụ trang điểm",
                            ParentId = new Guid("cdab81c1-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c7-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc tóc"
                        },
                        new
                        {
                            Id = new Guid("cdab81c8-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dầu xả",
                            ParentId = new Guid("cdab81c7-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81c9-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dầu gội",
                            ParentId = new Guid("cdab81c7-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81ca-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng tóc",
                            ParentId = new Guid("cdab81c7-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81cb-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Tẩy tế bào chết da đầu",
                            ParentId = new Guid("cdab81c7-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc da mặt"
                        },
                        new
                        {
                            Id = new Guid("cdab81cd-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Làm sạch da",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81ce-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Đặc trị",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81cf-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng ẩm",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d0-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng mắt",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d1-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng môi",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d2-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chống nắng da mặt",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d3-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Mặt nạ",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d4-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dụng cụ chăm sóc da mặt",
                            ParentId = new Guid("cdab81cc-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc cơ thể"
                        },
                        new
                        {
                            Id = new Guid("cdab81d6-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Sữa tắm",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d7-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Xà phòng",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d8-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Tẩy tế bào chết body",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81d9-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng da tay/chân",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81da-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chống nắng cơ thể",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81db-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Khử mùi",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81dc-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Tẩy lông/triệt lông",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81dd-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Dưỡng thể",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81de-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Bộ dụng cụ chăm sóc cơ thể",
                            ParentId = new Guid("cdab81d5-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81df-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc cá nhân"
                        },
                        new
                        {
                            Id = new Guid("cdab81e0-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc phụ nữ",
                            ParentId = new Guid("cdab81df-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81e1-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc răng miệng",
                            ParentId = new Guid("cdab81df-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81e2-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Chăm sóc sức khỏe",
                            ParentId = new Guid("cdab81df-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81e3-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Khăn giấy/ khăn ướt",
                            ParentId = new Guid("cdab81df-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81e4-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Thực phẩm chức năng"
                        },
                        new
                        {
                            Id = new Guid("cdab81e5-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Hỗ trợ làm đẹp",
                            ParentId = new Guid("cdab81e4-faf2-11ee-ad1e-f889d243ee30")
                        },
                        new
                        {
                            Id = new Guid("cdab81e6-faf2-11ee-ad1e-f889d243ee30"),
                            Description = "",
                            Name = "Hỗ trợ sức khỏe",
                            ParentId = new Guid("cdab81e4-faf2-11ee-ad1e-f889d243ee30")
                        });
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Buffer")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("varbinary(8000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Image", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CoverImageId")
                        .IsUnique()
                        .HasFilter("[CoverImageId] IS NOT NULL");

                    b.HasIndex("CoverVideoId")
                        .IsUnique()
                        .HasFilter("[CoverVideoId] IS NOT NULL");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductClassification", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitPrice")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UnitWeight")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("ProductClassificationId");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("ProductClassificationDetail", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOtherImage", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductProperty", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Buffer")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("varbinary(8000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Video", "dbo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Address", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Ward", "Ward")
                        .WithMany("Addresses")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.District", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Province", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Ward", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("Brand")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("Category")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "ImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Image");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "CoverImage")
                        .WithOne("Product")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "CoverImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", "CoverVideo")
                        .WithOne("Product")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "CoverVideoId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("CoverImage");

                    b.Navigation("CoverVideo");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductCategory", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductClassification")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", "ImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductClassifications")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductClassificationDetail")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassificationDetail", "ImageId");

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", "ProductClassification")
                        .WithMany("ProductClassificationDetails")
                        .HasForeignKey("ProductClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("ProductClassification");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", "Image")
                        .WithOne("ProductOtherImage")
                        .HasForeignKey("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductOtherImage", "ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductOtherImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductProperty", b =>
                {
                    b.HasOne("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", "Product")
                        .WithMany("ProductProperties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.AdministrativeDirectory.Ward", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Image", b =>
                {
                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Product");

                    b.Navigation("ProductClassification");

                    b.Navigation("ProductClassificationDetail");

                    b.Navigation("ProductOtherImage");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductClassifications");

                    b.Navigation("ProductOtherImages");

                    b.Navigation("ProductProperties");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.ProductClassification", b =>
                {
                    b.Navigation("ProductClassificationDetails");
                });

            modelBuilder.Entity("Minibox.Presentation.Core.Data.Context.Main.Schema.Dbo.Table.Video", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
